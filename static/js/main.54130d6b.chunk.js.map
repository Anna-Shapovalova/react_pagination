{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","lastPage","Math","ceil","pages","isFirstPage","isLastPage","className","classNames","disabled","href","onClick","map","page","active","items","App","useState","setPerPage","setCurrentPage","length","firstItem","lastItem","min","currentItems","slice","id","value","onChange","event","Number","target","htmlFor","newPage","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCKIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAAQd,EAAW,EAAGW,GAEtBI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAcnC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YACA,CAAEC,SAAUJ,IAFd,SAKE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAxBY,WACbN,GACHL,EAAaD,EAAc,IAiBzB,oBAWDK,EAAMQ,KAAI,SAAAC,GAAI,OACb,oBACEN,UAAWC,IACT,YACA,CACEM,OAAQD,IAASd,IAJvB,SASE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IACb,YACA,CAAEC,SAAUH,IAFd,SAKE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAvDW,WACZL,GACHN,EAAaD,EAAc,IAgDzB,wBC1EFgB,EAAQzB,EAAW,EAAG,IAEf0B,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBoB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOlB,EAAP,KAAoBoB,EAApB,KAEMtB,EAAQkB,EAAMK,OAEdC,GAAatB,EAAc,GAAKD,EAChCwB,EAAWpB,KAAKqB,IAAKF,EAAYvB,EAAUiB,EAAMK,QAEjDI,EAAeT,EAAMU,MAAMJ,EAAWC,GAa5C,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCsB,EAAY,EAD7C,cACoDC,EADpD,eACmEzB,EADnE,OAIA,sBAAKU,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAO7B,EACP8B,SA1BY,SACpBC,GAEAX,EAAWY,OAAOD,EAAME,OAAOJ,QAC/BR,EAAe,IAiBT,UAOE,wBAAQQ,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,qBAIJ,uBAAOK,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aArCe,SAACiC,GACpBd,EAAec,MAuCb,6BACGT,EAAaZ,KAAI,SAAAsB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,wBACWA,IADaA,YCjElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.54130d6b.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const pages = getNumbers(1, lastPage);\n\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === lastPage;\n\n  const onFirstPage = () => {\n    if (!isFirstPage) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const onLastPage = () => {\n    if (!isLastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames(\n        'page-item',\n        { disabled: isFirstPage },\n      )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={onFirstPage}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={classNames(\n            'page-item',\n            {\n              active: page === currentPage,\n            },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames(\n        'page-item',\n        { disabled: isLastPage },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={onLastPage}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const total = items.length;\n\n  const firstItem = (currentPage - 1) * perPage;\n  const lastItem = Math.min((firstItem + perPage), items.length);\n\n  const currentItems = items.slice(firstItem, lastItem);\n\n  const handlePerPage = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  };\n\n  const onPageChange = (newPage: number) => {\n    setCurrentPage(newPage);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem + 1} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPage}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {currentItems.map(item => (\n          <li data-cy=\"item\" key={item}>\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}